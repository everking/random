# Default
server {
    listen 80;
    listen [::]:80;

    server_name m634.local m634.dev localhost;
    server_tokens off;

# https://mindsers.blog/post/https-using-nginx-certbot-docker/
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://localhost$request_uri;
    }
}

map $http_upgrade $connection_upgrade {
    default Upgrade;
    ''      close;
}

server {
    listen 443 ssl http2;
    server_name m634.dev local.m634.dev;

    ssl_certificate /etc/ssl/certs/nginx/server.crt;
    ssl_certificate_key /etc/ssl/certs/nginx/server.key;

    charset UTF-8;

    error_page 404 /backend-not-found.html;

    location = /backend-not-found.html {
        allow all;
    }

    location / {
        root /usr/share/nginx/html;
    }

    access_log off;
    log_not_found off;
    error_log /var/log/nginx/error.log error;
}

server {
    listen 443 ssl http2;
    server_name rancher.m634.dev local-rancher.m634.dev;

    ssl_certificate /etc/ssl/certs/nginx/server.crt;
    ssl_certificate_key /etc/ssl/certs/nginx/server.key;

    charset UTF-8;

    error_page 404 /backend-not-found.html;

    location = /backend-not-found.html {
        allow all;
    }

    # Using host.docker.internal 
    # - assumes same node as rancher 
    location / {
        resolver 127.0.0.11;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass https://host.docker.internal:9443;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    access_log off;
    log_not_found off;
    error_log /var/log/nginx/error.log error;
}

server {
    listen 443 ssl http2;
    server_name argocd.m634.dev local-argocd.m634.dev;

    ssl_certificate /etc/ssl/certs/nginx/server.crt;
    ssl_certificate_key /etc/ssl/certs/nginx/server.key;

    charset UTF-8;

    error_page 404 /backend-not-found.html;

    location = /backend-not-found.html {
        allow all;
    }

    # Using host.docker.internal 
    # - assumes same node as rancher 
    location / {
        resolver 127.0.0.11;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass https://host.docker.internal:31407;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    access_log off;
    log_not_found off;
    error_log /var/log/nginx/error.log error;
}
